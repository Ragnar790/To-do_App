{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["form","inputText","setInputText","todos","setTodos","setFilter","value","onChange","e","target","type","className","onClick","preventDefault","text","done","id","Math","random","name","Todo","todo","map","item","event","filter","TodoList","filteredTodos","App","useState","setFilteredTodos","useEffect","filterHandler","Form","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7abe1735.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst form = ({ inputText, setInputText, todos, setTodos, setFilter }) => {\r\n\tconst inputTextHandler = (e) => {\r\n\t\t// console.log(e.target.value);\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\tconst submitButtonHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetTodos([\r\n\t\t\t...todos,\r\n\t\t\t{ text: inputText, done: false, id: Math.random() * 1000 },\r\n\t\t]);\r\n\t\tsetInputText(\"\");\r\n\t};\r\n\tconst filterStatusHandler = (e) => {\r\n\t\tsetFilter(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<input\r\n\t\t\t\tvalue={inputText}\r\n\t\t\t\tonChange={inputTextHandler}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"todo-list\"\r\n\t\t\t/>\r\n\t\t\t<button onClick={submitButtonHandler} className=\"todo-button\">\r\n\t\t\t\t<i className=\"fas fa-plus-square\"></i>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"select\">\r\n\t\t\t\t<select\r\n\t\t\t\t\tonClick={filterStatusHandler}\r\n\t\t\t\t\tname=\"todos\"\r\n\t\t\t\t\tclassName=\"filter-todo\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"All\">All</option>\r\n\t\t\t\t\t<option value=\"Done\">Done</option>\r\n\t\t\t\t\t<option value=\"Undone\">Undone</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\nexport default form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ setTodos, text, todo, todos }) => {\r\n\tconst deleteHandler = (event) => {\r\n\t\t// e is the event (todo) that is being clicked\r\n\t\t//will remove the one with same id and only keep the ones that are diff\r\n\t\t// In other words, filters the events with diff id and discards the one with same id (the one that's clicked)\r\n\r\n\t\t// console.log(\"Deleted->\" + event.target.className);\r\n\t\t// event.target.className = `${event.target.className} fall`;\r\n\t\t// console.log(\"new Class->\" + event.target.className);\r\n\t\tsetTodos(todos.filter((e) => e.id !== todo.id));\r\n\t};\r\n\tconst completeHandler = () => {\r\n\t\tsetTodos(\r\n\t\t\ttodos.map((item) => {\r\n\t\t\t\tif (item.id === todo.id) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tdone: !item.done,\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"todo\">\r\n\t\t\t<li className={`todo-item ${todo.done === true ? \"completed\" : \"\"}`}>\r\n\t\t\t\t{text}\r\n\t\t\t</li>\r\n\t\t\t<button className=\"complete-btn\">\r\n\t\t\t\t<i onClick={completeHandler} className=\"fas fa-check-square\"></i>\r\n\t\t\t</button>\r\n\t\t\t<button onClick={deleteHandler} className=\"trash-btn\">\r\n\t\t\t\t<i className=\"fas fa-trash-alt\"></i>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ setTodos, todos, filteredTodos }) => {\r\n\treturn (\r\n\t\t<div className=\"todo-container\">\r\n\t\t\t<ul className=\"todo-list\">\r\n\t\t\t\t{filteredTodos.map((todo) => (\r\n\t\t\t\t\t<Todo\r\n\t\t\t\t\t\tsetTodos={setTodos}\r\n\t\t\t\t\t\ttodos={todos}\r\n\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t\ttext={todo.text}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\tconst [inputText, setInputText] = useState(\"\");\n\tconst [todos, setTodos] = useState([]);\n\tconst [filter, setFilter] = useState(\"All\");\n\tconst [filteredTodos, setFilteredTodos] = useState([]);\n\n\t//USEEFFECT\n\tuseEffect(() => {\n\t\tfilterHandler();\n\t}, [todos, filter]);\n\n\tconst filterHandler = () => {\n\t\tswitch (filter) {\n\t\t\tcase \"Done\":\n\t\t\t\tsetFilteredTodos(todos.filter((todo) => todo.done === true));\n\t\t\t\tbreak;\n\t\t\tcase \"Undone\":\n\t\t\t\t// console.log(todos.filter((todo) => todo.done === true));\n\t\t\t\tsetFilteredTodos(todos.filter((todo) => todo.done === false));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetFilteredTodos(todos);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1>TODO LIST</h1>\n\t\t\t</header>\n\t\t\t<Form\n\t\t\t\tinputText={inputText}\n\t\t\t\tsetInputText={setInputText}\n\t\t\t\ttodos={todos}\n\t\t\t\tsetTodos={setTodos}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t/>\n\t\t\t<TodoList\n\t\t\t\tfilteredTodos={filteredTodos}\n\t\t\t\tsetTodos={setTodos}\n\t\t\t\ttodos={todos}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}